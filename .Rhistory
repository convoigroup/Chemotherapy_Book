"lambda_home","lambda_hosp")
)
ev_RCT <- evppi(outputs=chemotherapy_output, inputs=m_params, pars=par_RCT,
method = "earth")
# Explore at maximum willingness to pay
ev_RCT %>%
filter(k == wtp.max)
# Explore across willingness to pay
pdf("06_figs/EVPPI_RCT.pdf", width=5, height=3)
ev_RCT %>%
ggplot(aes(x=k, y=evppi, group=pars, col = pars)) +
geom_line() +
geom_line(data = EVPI, aes(x = k, y = evpi), linetype = "dashed") +
theme_bw()
dev.off()
# All Studies
par_groups <- list(
"side_effects" = c("logor_side_effects"),
"longterm_surv" = c("rate_longterm"),
"hosp_trans_probs" = c("p_died","lambda_hosp"),
"trans_probs" = c("p_side_effects_t1", "p_hospitalised_total",
"lambda_home", "p_died","lambda_hosp"),
"side_effects_and_follow_up" = c("logor_side_effects", "p_hospitalised_total",
"p_died","lambda_home","lambda_hosp"),
"costs" = c("c_home_care","c_hospital","c_death"),
"utilities" = c("u_recovery","u_home_care","u_hospital")
)
ev_groups <- evppi(outputs=chemotherapy_output, inputs=m_params, pars=par_groups,
method = "earth")
# Explore EVPPI at maximum uncertainty
ev_groups %>%
filter(k == wtp.max) %>%
arrange(desc(evppi)) %>%
mutate(evppi = round(evppi, 2))
# Plot key parameters
ev_groups %>%
filter(k == wtp.max) %>%
plot(order = TRUE)
# Plot all groups across WTP
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "dashed", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
ggsave("06_figs/EVPPI_groups.pdf")
# Plot all groups across WTP
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "dashed", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
# Plot all groups across WTP
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, size = pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "dashed", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
# Plot all groups across WTP
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, size = pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
ggsave("06_figs/EVPPI_groups.pdf")
# Plot all groups across WTP
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, size = pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
ggsave("06_figs/EVPPI_groups.pdf")
pdf("06_figs/EVPPI_WTP.pdf",width=6,height=4)
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
dev.off()
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
pdf("06_figs/EVPPI_WTP.pdf",width=6,height=4)
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
dev.off()
pdf("06_figs/EVPPI_WTP.pdf")
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
dev.off()
ggsave("06_figs/EVPPI_WTP.pdf")
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
ggsave("06_figs/EVPPI_WTP.pdf")
ggsave("06_figs/EVPPI_WTP.png")
ggsave("06_figs/EVPPI_WTP.png",height = 5.86, width = 8)
ggsave("06_figs/EVPPI_WTP.pdf", height = 5.86, width = 8)
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, size = pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1))))
ggsave("06_figs/EVPPI_groups.pdf", height = 5.86, width = 8)
ev_single %>% rbind(EVPI) %>%
filter(pars %in%c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters")) %>%
ggplot(aes(x=k, y=evppi, group=pars, linetype = pars, size = pars)) +
geom_line()+
scale_size_manual(values = c(1.5, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Parameters") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("logor_side_effects",
"u_home_care",
"rate_longterm",
"lambda_hosp",
"all_parameters"),
labels = c("Log odds ratio", "Home care utility", "Long term death rate",
"Lambda for hospitalisation", "EVPI"))+
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1.5))))
ggsave("06_figs/EVPPI_WTP.pdf", height = 5.86, width = 8)
# Plot all groups across WTP
ev_groups %>% rbind(EVPI) %>%
filter(pars %in% c("all_parameters", "side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs")) %>%
ggplot(aes(x=k, y=evppi, group=pars, size = pars, linetype = pars)) +
geom_line() +
scale_size_manual(values = c(1.5, 0.5,
0.5, 0.5,0.5),
guide = "none") +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Willingness-to-Pay") +
ylab("Value of Information") +
labs(linetype = "Studies") +
scale_linetype_manual(values = c("longdash", "solid", "dotted","dotdash", "solid"),
breaks = c("side_effects",
"side_effects_and_follow_up",
"utilities",
"trans_probs", "all_parameters"),
labels = c("Side effects", "Side effects and follow up",
"Utilities",
"Transition probabilities", "EVPI")) +
guides(linetype = guide_legend(override.aes = list(size = c(0.5, 0.5,
0.5, 0.5, 1.5))))
ggsave("06_figs/EVPPI_groups.pdf", height = 5.86, width = 8)
pdf("06_figs/ENBS_SEFU_MM.pdf", width  = par("din")[1],
height = par("din")[2],
family = "Helvetica-Narrow")
ENBS_RB <- vector()
i <- 1
for(n in plotting_4$attrib$N){
ENBS_RB[i] <- ENBS.fun(plotting_3$evsi$`20000`[i], pop.adjust, 7, 0.035,
mean(c(1260000, 1400000)) + mean(2 * c(1560.55, 1600) * n))
i <- i + 1
}
ENBS_MM <- vector()
i <- 1
for(n in plotting_4$attrib$N){
ENBS_MM[i] <- ENBS.fun(plotting_4$evsi$`20000`[i], pop.adjust, 7, 0.035,
mean(c(1260000, 1400000)) + mean(2 * c(1560.55, 1600) * n))
i <- i + 1
}
evsi.enbs.plot(plotting_4, c(1260000, 1400000), 2 * c(1560.55, 1600),
k = 20000, Pop = pop.adjust, Time = 7,
ylim = c(min(ENBS_MM), max(ENBS_RB)),
legend = F)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 3)
legend(y =4.6e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,3),
lwd = c(2,1), box.lwd = 0,
box.col = "white", bg = "white")
dev.off()
evsi.enbs.plot(plotting_4, c(1260000, 1400000), 2 * c(1560.55, 1600),
k = 20000, Pop = pop.adjust, Time = 7,
ylim = c(min(ENBS_MM), max(ENBS_RB)),
legend = F)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 3)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 2)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 2, lwd = 2)
legend(y =4.6e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,3),
lwd = c(2,1), box.lwd = 0,
box.col = "white", bg = "white")
evsi.enbs.plot(plotting_4, c(1260000, 1400000), 2 * c(1560.55, 1600),
k = 20000, Pop = pop.adjust, Time = 7,
ylim = c(min(ENBS_MM), max(ENBS_RB)),
legend = F)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 2, lwd = 2)
legend(y =4.6e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,3),
lwd = c(2,2), box.lwd = 0,
box.col = "white", bg = "white")
legend(y =5.0e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,3),
lwd = c(2,2), box.lwd = 0,
box.col = "white", bg = "white")
legend(y =5.2e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,3),
lwd = c(2,2), box.lwd = 0,
box.col = "white", bg = "white")
evsi.enbs.plot(plotting_4, c(1260000, 1400000), 2 * c(1560.55, 1600),
k = 20000, Pop = pop.adjust, Time = 7,
ylim = c(min(ENBS_MM), max(ENBS_RB)),
legend = F)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 2, lwd = 2)
legend(y =5.2e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,3),
lwd = c(2,2), box.lwd = 0,
box.col = "white", bg = "white")
legend(y =5.2e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,2),
lwd = c(2,2), box.lwd = 0,
box.col = "white", bg = "white")
pdf("06_figs/ENBS_SEFU_MM.pdf", width  = par("din")[1],
height = par("din")[2],
family = "Helvetica-Narrow")
ENBS_RB <- vector()
i <- 1
for(n in plotting_4$attrib$N){
ENBS_RB[i] <- ENBS.fun(plotting_3$evsi$`20000`[i], pop.adjust, 7, 0.035,
mean(c(1260000, 1400000)) + mean(2 * c(1560.55, 1600) * n))
i <- i + 1
}
ENBS_MM <- vector()
i <- 1
for(n in plotting_4$attrib$N){
ENBS_MM[i] <- ENBS.fun(plotting_4$evsi$`20000`[i], pop.adjust, 7, 0.035,
mean(c(1260000, 1400000)) + mean(2 * c(1560.55, 1600) * n))
i <- i + 1
}
evsi.enbs.plot(plotting_4, c(1260000, 1400000), 2 * c(1560.55, 1600),
k = 20000, Pop = pop.adjust, Time = 7,
ylim = c(min(ENBS_MM), max(ENBS_RB)),
legend = F)
points(plotting_3$attrib$N, ENBS_RB, type = "l",
lty = 2, lwd = 2)
legend(y =5.2e07, x = 950, c("Moment Matching", "Regression Based"), lty = c(1,2),
lwd = c(2,2), box.lwd = 0,
box.col = "white", bg = "white")
dev.off()
