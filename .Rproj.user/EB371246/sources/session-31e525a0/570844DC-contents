
# Load required packages

if(!require(pacman)){               
  install.packages("pacman")
  library(pacman)
}

if(!require(BiocManager)){               
  install.packages("BiocManager")
  library(BiocManager)
}

p_install(boot, force=FALSE)
p_load(boot)

# Set literature-based parameter values

Qd <- 0                               # QALY for death
Qs <- 1                               # QALY for survive

Cro <- 900                            # Cost of ruling out AMI
Csk <- 1700                           # Cost of Streptokinase (SK)
Cbl <- 2050                           # Cost of bleeding
Cmi <- 4100                           # Cost of AMI

Psbl <- 0.07                          # Probability of bleeding given SK
Pcbl <- 0.04                          # Probability of bleeding given conservative treatment (CT)
Pcmi <- 0.20                          # Probability of AMI given CT
Psmi <- 0.1422                        # Probability of AMI given SK

lambda <-250000                       # Willingness to pay per life saved

# Estimate cost

cost.Control <-                       # Cost in CT
  Pcbl*(Cro+Cbl) + 
  ((1-Pcbl)*Pcmi)*(Cro+Cmi) + 
  ((1-Pcbl)*(1-Pcmi))*Cro

cost.Streptokinase <-                 # Cost in SK
  Psbl*(Csk+Cbl) + 
  ((1-Psbl)*Psmi)*(Csk+Cmi) + 
  ((1-Psbl)*(1-Psmi))*Csk

# Estimate utility

utility.Control <-                    # Utility in CT
  Pcbl*Qd + 
  ((1-Pcbl)*Pcmi)*Qd + 
  ((1-Pcbl)*(1-Pcmi))*Qs

utility.Streptokinase <-              # Utility in SK
  Psbl*Qd + 
  ((1-Psbl)*Psmi)*Qd + 
  ((1-Psbl)*(1-Psmi))*Qs


# Perform baseline cost and effectiveness analysis

print(cost.Streptokinase)
print(cost.Control)

print(utility.Streptokinase)
print(utility.Control)

ICER <- (cost.Streptokinase - cost.Control)/(utility.Streptokinase - utility.Control)
print(ICER)

NMB_CT = utility.Control*lambda - cost.Control
print(NMB_CT)

NMB_SK = utility.Streptokinase*lambda - cost.Streptokinase
print(NMB_SK)

INB = NMB_SK - NMB_CT
print(INB)